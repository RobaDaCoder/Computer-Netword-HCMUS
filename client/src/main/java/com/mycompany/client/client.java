/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.client;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.OutputStreamWriter;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketAddress;
import java.nio.ByteBuffer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author LEGION
 */
public class client extends javax.swing.JFrame {

    /**
     * Creates new form client
     */
    public client() {
        initComponents();
        jPanel2.setVisible(true);
        lsystem.setVisible(false);
        lapp.setVisible(false);
        lprocess.setVisible(false);
        lscreenshot.setVisible(false);
        JTableHeader processtableheader = processtable.getTableHeader();
        processtableheader.setBackground(new java.awt.Color(51,51,51));
        processtableheader.setForeground(new java.awt.Color(255,255,255));
        JTableHeader apptableheader = apptable.getTableHeader();
        apptableheader.setBackground(new java.awt.Color(51,51,51));
        apptableheader.setForeground(new java.awt.Color(255,255,255));
        jScrollPane1.getViewport().setBackground(new java.awt.Color(51,51,51));
        jScrollPane2.getViewport().setBackground(new java.awt.Color(51,51,51));
        this.setShape(new RoundRectangle2D.Double(0, 0, this.getWidth(), this.getHeight(), 15, 15));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lscreenshot = new javax.swing.JPanel();
        savepic = new javax.swing.JButton();
        screenshot = new javax.swing.JLabel();
        takepic = new javax.swing.JButton();
        lprocess = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        processtable = new javax.swing.JTable();
        Xemprocess = new javax.swing.JButton();
        Kill2 = new javax.swing.JButton();
        Xoaprocess = new javax.swing.JButton();
        Start2 = new javax.swing.JButton();
        lapp = new javax.swing.JPanel();
        Xemapp = new javax.swing.JButton();
        Kill = new javax.swing.JButton();
        Xoaapp = new javax.swing.JButton();
        Start = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        apptable = new javax.swing.JTable();
        lsystem = new javax.swing.JPanel();
        Exit = new javax.swing.JButton();
        keylog = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        signout = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        systembutton = new javax.swing.JButton();
        appbutton = new javax.swing.JButton();
        processbutton = new javax.swing.JButton();
        screenshotbutton = new javax.swing.JButton();
        iptext = new javax.swing.JTextField();
        ipconnect = new javax.swing.JButton();
        status = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        lscreenshot.setBackground(new java.awt.Color(0, 0, 0));

        savepic.setBackground(new java.awt.Color(51, 51, 51));
        savepic.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        savepic.setForeground(new java.awt.Color(255, 255, 255));
        savepic.setText("Save");
        savepic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        savepic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savepicActionPerformed(evt);
            }
        });

        screenshot.setForeground(new java.awt.Color(51, 51, 51));
        screenshot.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));

        takepic.setBackground(new java.awt.Color(51, 51, 51));
        takepic.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        takepic.setForeground(new java.awt.Color(255, 255, 255));
        takepic.setText("Take screenshot");
        takepic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        takepic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takepicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lscreenshotLayout = new javax.swing.GroupLayout(lscreenshot);
        lscreenshot.setLayout(lscreenshotLayout);
        lscreenshotLayout.setHorizontalGroup(
            lscreenshotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lscreenshotLayout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(screenshot, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
            .addGroup(lscreenshotLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(takepic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(savepic, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        lscreenshotLayout.setVerticalGroup(
            lscreenshotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lscreenshotLayout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(lscreenshotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(takepic, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(savepic, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(screenshot, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        lprocess.setBackground(new java.awt.Color(0, 0, 0));

        jScrollPane2.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        jScrollPane2.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));

        processtable.setBackground(new java.awt.Color(51, 51, 51));
        processtable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        processtable.setForeground(new java.awt.Color(255, 255, 255));
        processtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name Process", "PID", "Session Name", "Session", "Mem Usage"
            }
        ));
        processtable.setGridColor(new java.awt.Color(51, 51, 51));
        processtable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(processtable);

        Xemprocess.setBackground(new java.awt.Color(51, 51, 51));
        Xemprocess.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        Xemprocess.setForeground(new java.awt.Color(255, 255, 255));
        Xemprocess.setText("Xem");
        Xemprocess.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        Xemprocess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XemprocessActionPerformed(evt);
            }
        });

        Kill2.setBackground(new java.awt.Color(51, 51, 51));
        Kill2.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        Kill2.setForeground(new java.awt.Color(255, 255, 255));
        Kill2.setText("Kill");
        Kill2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        Kill2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Kill2ActionPerformed(evt);
            }
        });

        Xoaprocess.setBackground(new java.awt.Color(51, 51, 51));
        Xoaprocess.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        Xoaprocess.setForeground(new java.awt.Color(255, 255, 255));
        Xoaprocess.setText("Xóa");
        Xoaprocess.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        Xoaprocess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaprocessActionPerformed(evt);
            }
        });

        Start2.setBackground(new java.awt.Color(51, 51, 51));
        Start2.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        Start2.setForeground(new java.awt.Color(255, 255, 255));
        Start2.setText("Start");
        Start2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        Start2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Start2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lprocessLayout = new javax.swing.GroupLayout(lprocess);
        lprocess.setLayout(lprocessLayout);
        lprocessLayout.setHorizontalGroup(
            lprocessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lprocessLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(lprocessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
                    .addGroup(lprocessLayout.createSequentialGroup()
                        .addComponent(Kill2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(42, 42, 42)
                        .addComponent(Xemprocess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(47, 47, 47)
                        .addComponent(Xoaprocess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(41, 41, 41)
                        .addComponent(Start2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(60, 60, 60))
        );
        lprocessLayout.setVerticalGroup(
            lprocessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lprocessLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(lprocessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Start2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Xoaprocess, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Xemprocess, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Kill2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        lapp.setBackground(new java.awt.Color(0, 0, 0));

        Xemapp.setBackground(new java.awt.Color(51, 51, 51));
        Xemapp.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        Xemapp.setForeground(new java.awt.Color(255, 255, 255));
        Xemapp.setText("Xem");
        Xemapp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        Xemapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XemappActionPerformed(evt);
            }
        });

        Kill.setBackground(new java.awt.Color(51, 51, 51));
        Kill.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        Kill.setForeground(new java.awt.Color(255, 255, 255));
        Kill.setText("Kill");
        Kill.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        Kill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KillActionPerformed(evt);
            }
        });

        Xoaapp.setBackground(new java.awt.Color(51, 51, 51));
        Xoaapp.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        Xoaapp.setForeground(new java.awt.Color(255, 255, 255));
        Xoaapp.setText("Xóa");
        Xoaapp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        Xoaapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaappActionPerformed(evt);
            }
        });

        Start.setBackground(new java.awt.Color(51, 51, 51));
        Start.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        Start.setForeground(new java.awt.Color(255, 255, 255));
        Start.setText("Start");
        Start.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setToolTipText("");
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        apptable.setBackground(new java.awt.Color(51, 51, 51));
        apptable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        apptable.setForeground(new java.awt.Color(255, 255, 255));
        apptable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name App", "MainWindowTitle"
            }
        ));
        apptable.setGridColor(new java.awt.Color(51, 51, 51));
        apptable.setSelectionBackground(new java.awt.Color(51, 51, 51));
        apptable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        apptable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(apptable);

        javax.swing.GroupLayout lappLayout = new javax.swing.GroupLayout(lapp);
        lapp.setLayout(lappLayout);
        lappLayout.setHorizontalGroup(
            lappLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lappLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(lappLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
                    .addGroup(lappLayout.createSequentialGroup()
                        .addComponent(Kill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(42, 42, 42)
                        .addComponent(Xemapp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(47, 47, 47)
                        .addComponent(Xoaapp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(41, 41, 41)
                        .addComponent(Start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(61, 61, 61))
        );
        lappLayout.setVerticalGroup(
            lappLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lappLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(lappLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Xoaapp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Xemapp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Kill, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        lsystem.setBackground(new java.awt.Color(0, 0, 0));

        Exit.setBackground(new java.awt.Color(51, 51, 51));
        Exit.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        Exit.setForeground(new java.awt.Color(255, 255, 255));
        Exit.setText("Disconnect");
        Exit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        keylog.setBackground(new java.awt.Color(51, 51, 51));
        keylog.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        keylog.setForeground(new java.awt.Color(255, 255, 255));
        keylog.setText("Key Logger");
        keylog.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        keylog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keylogActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Shut Down");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        signout.setBackground(new java.awt.Color(51, 51, 51));
        signout.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        signout.setForeground(new java.awt.Color(255, 255, 255));
        signout.setText("Sign Out of User");
        signout.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        signout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lsystemLayout = new javax.swing.GroupLayout(lsystem);
        lsystem.setLayout(lsystemLayout);
        lsystemLayout.setHorizontalGroup(
            lsystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lsystemLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(lsystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signout, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keylog, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(222, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lsystemLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        lsystemLayout.setVerticalGroup(
            lsystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lsystemLayout.createSequentialGroup()
                .addContainerGap(193, Short.MAX_VALUE)
                .addComponent(keylog, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signout, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117)
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lsystem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(lapp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 19, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(lprocess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 21, Short.MAX_VALUE)))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(lscreenshot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 20, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lsystem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lapp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lprocess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lscreenshot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        lscreenshot.getAccessibleContext().setAccessibleParent(jPanel2);
        lprocess.getAccessibleContext().setAccessibleParent(jPanel2);
        lapp.getAccessibleContext().setAccessibleParent(jPanel2);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        systembutton.setBackground(new java.awt.Color(51, 51, 51));
        systembutton.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        systembutton.setForeground(new java.awt.Color(255, 255, 255));
        systembutton.setText("System");
        systembutton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        systembutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                systembuttonActionPerformed(evt);
            }
        });

        appbutton.setBackground(new java.awt.Color(51, 51, 51));
        appbutton.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        appbutton.setForeground(new java.awt.Color(255, 255, 255));
        appbutton.setText("Application");
        appbutton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        appbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appbuttonActionPerformed(evt);
            }
        });

        processbutton.setBackground(new java.awt.Color(51, 51, 51));
        processbutton.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        processbutton.setForeground(new java.awt.Color(255, 255, 255));
        processbutton.setText("Process");
        processbutton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        processbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processbuttonActionPerformed(evt);
            }
        });

        screenshotbutton.setBackground(new java.awt.Color(51, 51, 51));
        screenshotbutton.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        screenshotbutton.setForeground(new java.awt.Color(255, 255, 255));
        screenshotbutton.setText("Screenshot");
        screenshotbutton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        screenshotbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                screenshotbuttonActionPerformed(evt);
            }
        });

        iptext.setBackground(new java.awt.Color(0, 0, 0));
        iptext.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        iptext.setForeground(new java.awt.Color(255, 255, 255));
        iptext.setText("Input IP");
        iptext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));

        ipconnect.setBackground(new java.awt.Color(51, 51, 51));
        ipconnect.setFont(new java.awt.Font("Teko SemiBold", 0, 14)); // NOI18N
        ipconnect.setForeground(new java.awt.Color(255, 255, 255));
        ipconnect.setText("Connect");
        ipconnect.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255)));
        ipconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipconnectActionPerformed(evt);
            }
        });

        status.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        status.setForeground(new java.awt.Color(255, 51, 51));
        status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        status.setText("Disconnected");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(processbutton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(appbutton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(systembutton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(screenshotbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(iptext, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(ipconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(iptext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ipconnect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(systembutton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(appbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(processbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(screenshotbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel4MouseDragged(evt);
            }
        });
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel4MousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Unispace", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("X");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Unispace", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Remote Control Project");

        jLabel3.setFont(new java.awt.Font("Unispace", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("-");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 845, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(187, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(2, 2, 2)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addGap(0, 40, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void systembuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_systembuttonActionPerformed
        lsystem.setVisible(true);
        lapp.setVisible(false);
        lprocess.setVisible(false);
        lscreenshot.setVisible(false);
    }//GEN-LAST:event_systembuttonActionPerformed

    private void appbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appbuttonActionPerformed
        lsystem.setVisible(false);
        lapp.setVisible(true);
        lprocess.setVisible(false);
        lscreenshot.setVisible(false);
    }//GEN-LAST:event_appbuttonActionPerformed

    private void processbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processbuttonActionPerformed
        lsystem.setVisible(false);
        lapp.setVisible(false);
        lprocess.setVisible(true);
        lscreenshot.setVisible(false);
    }//GEN-LAST:event_processbuttonActionPerformed

    private void screenshotbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_screenshotbuttonActionPerformed
        lsystem.setVisible(false);
        lapp.setVisible(false);
        lprocess.setVisible(false);
        lscreenshot.setVisible(true);
    }//GEN-LAST:event_screenshotbuttonActionPerformed

    private void ipconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipconnectActionPerformed
        String s;
        boolean test = true;
        program.ip = iptext.getText(); //Tạo biến ip (kiểu string) lấy từ khung iptext.
        try{
            SocketAddress socketaddr = new InetSocketAddress(program.ip,6920); //tạo socket address với biến socketaddr cùng vời địa chỉ ip và port
            program.sclient = new Socket();
            program.sclient.connect(socketaddr); //connect với server
            status.setText("Connected");
            status.setForeground(Color.GREEN);
        } catch(IOException ex){
            JOptionPane.showMessageDialog(rootPane, "Kết nối thất bại tới " + program.ip);
            test = false;
            program.sclient = null;
        }
        if (test)
        {
            try {
                JOptionPane.showMessageDialog(rootPane, "Kết nối thành công");
                program.is = new BufferedReader(new InputStreamReader(program.sclient.getInputStream()));
                program.os = new BufferedWriter(new OutputStreamWriter(program.sclient.getOutputStream()));
            } catch (IOException ex) {
                Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ipconnectActionPerformed

    private void XemappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XemappActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        try {
            String s = "XEMAPP";
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
            String soprocess = program.is.readLine();
            int soprocess1 = 0;
            DefaultTableModel dm = (DefaultTableModel)apptable.getModel();
            while(dm.getRowCount() > 0)
            {
                dm.removeRow(0);
            }
            soprocess1 = Integer.parseInt(soprocess);
            oin = new ObjectInputStream(program.sclient.getInputStream());
            for (int i = 0; i < soprocess1-5; i++)
            {
                String[] data = (String[]) oin.readObject();
                DefaultTableModel table = (DefaultTableModel)apptable.getModel();
                table.addRow(data);
            }
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_XemappActionPerformed

    private void KillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KillActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        String s = "KILL";
        try {
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
            new kill().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_KillActionPerformed

    private void XoaappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaappActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        DefaultTableModel dm = (DefaultTableModel)apptable.getModel();
        while(dm.getRowCount() > 0)
        {
            dm.removeRow(0);
        }
    }//GEN-LAST:event_XoaappActionPerformed

    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        String s = "START";
        try {
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
            new start().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_StartActionPerformed

    private void XemprocessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XemprocessActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        try {
            String s = "XEMPROCESS";
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
            String soprocess = program.is.readLine();
            DefaultTableModel dm = (DefaultTableModel)processtable.getModel();
            while(dm.getRowCount() > 0)
            {
                dm.removeRow(0);
            }
            int soprocess1 = 0;
            soprocess1 = Integer.parseInt(soprocess);
            oin = new ObjectInputStream(program.sclient.getInputStream());
            for (int i = 0; i < soprocess1-3; i++)
            {
                String[] data = (String[]) oin.readObject();
                DefaultTableModel table = (DefaultTableModel)processtable.getModel();
                table.addRow(data);
            }
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_XemprocessActionPerformed

    private void Kill2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Kill2ActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        String s = "KILL";
        try {
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
            new kill().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Kill2ActionPerformed

    private void XoaprocessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaprocessActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        DefaultTableModel dm = (DefaultTableModel)processtable.getModel();
        while(dm.getRowCount() > 0)
        {
            dm.removeRow(0);
        }
    }//GEN-LAST:event_XoaprocessActionPerformed

    private void Start2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Start2ActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        String s = "START";
        try {
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
            new start().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Start2ActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        String s = "EXIT";
        try {
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
        status.setText("Disconnected");
        status.setForeground(Color.RED);
    }//GEN-LAST:event_ExitActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        String s = "SHUTDOWN";
        try {
            //            program.os = new BufferedWriter(new OutputStreamWriter(program.sclient.getOutputStream()));
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
        status.setText("Disconnected");
        status.setForeground(Color.RED);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void savepicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savepicActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("*.png", "png"));
        //        BufferedImage img = new BufferedImage(program.img1.getIconWidth(),
            //            program.img1.getIconHeight(),BufferedImage.TYPE_INT_RGB);
        if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                ImageIO.write((RenderedImage) program.img1, "png", new File(file.getAbsolutePath()+".png"));
            } catch (IOException ex) {
                System.out.println("Failed to save image!");
            }
        } else {
            System.out.println("No file choosen!");
        }
    }//GEN-LAST:event_savepicActionPerformed

    private void takepicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takepicActionPerformed
        String s = "SCREENSHOT";
        try {
            img = null;
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
            oin = new ObjectInputStream(program.sclient.getInputStream());
            bytes = (byte[]) oin.readObject();
            InputStream in = new ByteArrayInputStream(bytes);
            img = ImageIO.read(in);
            Image img1 = img;
            screenshot.setIcon(new ImageIcon(img1.getScaledInstance(screenshot.getWidth(),screenshot.getHeight(), Image.SCALE_DEFAULT)));
            program.img1 = img;
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_takepicActionPerformed

    private void signoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signoutActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        String s = "SIGNOUT";
        try {
            //            program.os = new BufferedWriter(new OutputStreamWriter(program.sclient.getOutputStream()));
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
        status.setText("Disconnected");
        status.setForeground(Color.RED);
    }//GEN-LAST:event_signoutActionPerformed

    private void keylogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keylogActionPerformed
        if(program.sclient == null)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa kết nối tới server");
            return;
        }
        String s = "KEYLOG";
        try {
//            program.os = new BufferedWriter(new OutputStreamWriter(program.sclient.getOutputStream()));
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
            new keylog().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_keylogActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        String s = "EXIT";
        try {
            program.os.write(s);
            program.os.newLine();
            program.os.flush();
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jPanel4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_jPanel4MouseDragged

    private void jPanel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel4MousePressed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        this.setState(client.ICONIFIED);
    }//GEN-LAST:event_jLabel3MouseClicked

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new client().setVisible(true);
//            }
//        });
//    }
    int xMouse,yMouse;
    byte[] bytes;
    InputStream is = null;
    private BufferedImage img;
    ObjectInputStream oin = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JButton Kill;
    private javax.swing.JButton Kill2;
    private javax.swing.JButton Start;
    private javax.swing.JButton Start2;
    private javax.swing.JButton Xemapp;
    private javax.swing.JButton Xemprocess;
    private javax.swing.JButton Xoaapp;
    private javax.swing.JButton Xoaprocess;
    private javax.swing.JButton appbutton;
    private javax.swing.JTable apptable;
    private javax.swing.JButton ipconnect;
    private javax.swing.JTextField iptext;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton keylog;
    private javax.swing.JPanel lapp;
    private javax.swing.JPanel lprocess;
    private javax.swing.JPanel lscreenshot;
    private javax.swing.JPanel lsystem;
    private javax.swing.JButton processbutton;
    private javax.swing.JTable processtable;
    private javax.swing.JButton savepic;
    private javax.swing.JLabel screenshot;
    private javax.swing.JButton screenshotbutton;
    private javax.swing.JButton signout;
    private javax.swing.JLabel status;
    private javax.swing.JButton systembutton;
    private javax.swing.JButton takepic;
    // End of variables declaration//GEN-END:variables
}
